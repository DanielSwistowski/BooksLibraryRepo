@using BooksLibrary.HtmlHelperClass
@model BooksLibrary.Models.AccountViewModel.UserAccountSettingsViewModel

@{
    ViewBag.Title = "Usuń konto użytkownika";
}

<h2>Usuń konto użytkownika</h2>

<h3>Czy na pewno chcesz skasować to konto?</h3>

<fieldset>
    <legend>Dane konta</legend>

    @Html.HiddenFor(model => model.UserId)

    <div class="display-label">
        @Html.DisplayNameFor(model => model.UserName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.UserName)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.FirstName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.FirstName)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.LastName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.LastName)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Gender)
    </div>
    <div class="display-field">
        @Html.GenderTranstateToPL(Model.Gender)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Email)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Email)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.UserIsEnabled)
    </div>
    <div class="display-field">
        @Html.BoolToYesOrNo(Model.UserIsEnabled)
    </div>
</fieldset>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <p>
        <input type="submit" value="Usuń" class="button" />
        @Html.ActionLink("Anuluj", "UserSettings", new { @userName = Model.UserName }, new { @class = "button" })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}